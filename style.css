@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;700&display=swap');

:root {
    --bg-color: #0a0a12;
    --text-color: #ffffff;
    --accent-color: #00c8ff;
    --danger-color: #ff3c5a;
    --success-color: #40ffbc;
    --panel-color: #121222;
    --depth-color: #00c8ff;
    --obstacle-color: #ff3c5a;
    --brake-color: #ff6600;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Roboto Mono', monospace;
    background-color: var(--bg-color);
    color: var(--text-color);
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    transition: background-color 0.2s ease;
    background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.6)), 
                      radial-gradient(circle at 50% 70%, rgba(0, 200, 255, 0.1), transparent 70%);
}

/* Braking effect for body */
body.braking {
    background-color: rgba(30, 15, 5, 1);
}

.game-container {
    width: 100%;
    max-width: 500px;
    height: 100vh;
    max-height: 900px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    position: relative;
}

.welcome-screen, .game-screen, .results-screen {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transition: opacity 0.3s ease;
}

.game-screen {
    justify-content: flex-start;
    padding-top: 1rem;
}

h1 {
    font-size: 4rem;
    letter-spacing: 3px;
    text-align: center;
    margin-bottom: 2rem;
    font-weight: 700;
    line-height: 1.1;
    text-shadow: 0 0 15px rgba(0, 200, 255, 0.5);
}

h2 {
    font-size: 2.5rem;
    letter-spacing: 2px;
    margin-bottom: 1.5rem;
}

h3 {
    font-size: 1.5rem;
    letter-spacing: 1px;
    margin-bottom: 1rem;
    color: var(--accent-color);
}

p {
    margin-bottom: 2rem;
    text-align: center;
    font-size: 1.2rem;
}

.input-container {
    display: flex;
    flex-direction: column;
    width: 100%;
}

input[type="text"] {
    background-color: rgba(255, 255, 255, 0.1);
    border: 2px solid var(--accent-color);
    color: var(--text-color);
    padding: 1rem;
    margin-bottom: 1rem;
    font-size: 1.2rem;
    font-family: 'Roboto Mono', monospace;
    text-align: center;
    outline: none;
    transition: all 0.2s ease;
}

input[type="text"]:focus {
    border-color: var(--success-color);
    box-shadow: 0 0 10px rgba(64, 255, 188, 0.5);
}

button {
    background-color: var(--accent-color);
    color: var(--bg-color);
    border: none;
    padding: 1rem;
    font-size: 1.2rem;
    font-weight: bold;
    cursor: pointer;
    font-family: 'Roboto Mono', monospace;
    letter-spacing: 1px;
    transition: all 0.2s ease;
}

button:hover {
    background-color: var(--success-color);
}

.hidden {
    display: none !important;
}

/* Game Screen Styles */
.stats {
    position: absolute;
    top: 0.5rem;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 0 2rem;
    z-index: 100;
}

.depth-display {
    font-size: 1.5rem;
    display: flex;
    align-items: baseline;
}

#depthLabel {
    margin-right: 0.5rem;
    font-size: 1rem;
    opacity: 0.7;
}

#currentDepth {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--depth-color);
    text-shadow: 0 0 10px rgba(0, 200, 255, 0.5);
}

#depthUnit {
    margin-left: 0.3rem;
    font-size: 1rem;
    opacity: 0.7;
}

.player-info {
    font-size: 1.2rem;
    opacity: 0.8;
}

.elevator-shaft {
    width: 100%;
    height: 95%; /* Increased from 80% to almost full height */
    border-left: 2px dashed rgba(255, 255, 255, 0.1);
    border-right: 2px dashed rgba(255, 255, 255, 0.1);
    position: relative;
    margin: 0 auto;
    overflow: hidden;
    background-color: rgba(0, 0, 0, 0.2);
    cursor: move; /* Show cursor as movable */
    transition: all 0.2s ease;
    border-radius: 8px;
    
    /* Depth effect using gradients */
    background-image: 
        linear-gradient(to bottom, 
            rgba(0, 0, 0, 0) 0%, 
            rgba(0, 0, 0, 0.4) 80%, 
            rgba(0, 0, 0, 0.7) 100%),
        radial-gradient(
            circle at 50% 100%, 
            rgba(0, 200, 255, 0.05), 
            transparent 70%
        );
}

/* Braking effect for shaft */
.elevator-shaft.braking {
    background-color: rgba(30, 15, 5, 0.4);
    border-left: 2px dashed rgba(255, 102, 0, 0.2);
    border-right: 2px dashed rgba(255, 102, 0, 0.2);
    background-image: 
        linear-gradient(to bottom, 
            rgba(30, 15, 5, 0) 0%, 
            rgba(30, 15, 5, 0.4) 80%, 
            rgba(30, 15, 5, 0.7) 100%),
        radial-gradient(
            circle at 50% 100%, 
            rgba(255, 102, 0, 0.05), 
            transparent 70%
        );
}

.elevator {
    width: 60px;
    height: 60px;
    background-color: var(--accent-color);
    position: absolute;
    top: 20%; /* Moved up from 30% for better positioning in taller shaft */
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 15px rgba(0, 200, 255, 0.7);
    z-index: 10;
    border-radius: 4px;
    transition: all 0.2s ease-out;
    
    /* Add elevator details */
    background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0.1));
}

/* Braking effect for elevator */
.elevator.braking {
    background-color: var(--brake-color);
    box-shadow: 0 0 20px rgba(255, 102, 0, 0.8);
}

/* Obstacle styles */
.obstacle {
    position: absolute;
    background-color: var(--obstacle-color);
    box-shadow: 0 0 10px rgba(255, 60, 90, 0.6);
    z-index: 5;
    border-radius: 3px;
    
    /* Add texture to obstacles */
    background-image: repeating-linear-gradient(
        45deg,
        transparent,
        transparent 5px,
        rgba(255, 255, 255, 0.05) 5px,
        rgba(255, 255, 255, 0.05) 10px
    );
}

/* Particle styles */
.particle {
    position: absolute;
    background-color: var(--accent-color);
    border-radius: 50%;
    box-shadow: 0 0 5px rgba(0, 200, 255, 0.5);
    pointer-events: none;
}

/* Score effect */
.score-popup {
    position: absolute;
    color: var(--success-color);
    font-weight: bold;
    font-size: 1.2rem;
    animation: float-up 1.5s ease-out forwards;
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.7);
    pointer-events: none;
    z-index: 150;
}

@keyframes float-up {
    0% {
        opacity: 1;
        transform: translateY(0);
    }
    100% {
        opacity: 0;
        transform: translateY(-50px);
    }
}

/* Game instructions */
.game-instructions {
    position: absolute;
    top: 2.5rem;
    width: 100%;
    text-align: center;
    font-size: 1rem;
    opacity: 0.7;
    pointer-events: none;
    z-index: 200;
    text-shadow: 0 0 5px rgba(0, 0, 0, 0.8);
}

/* Results Screen Styles */
.high-score-message {
    color: var(--success-color);
    font-size: 1.3rem;
    font-weight: bold;
    margin: 1rem 0 2rem;
    text-align: center;
    min-height: 1.5rem;
    text-shadow: 0 0 10px rgba(64, 255, 188, 0.5);
}

.leaderboard {
    width: 100%;
    background-color: var(--panel-color);
    padding: 1.5rem;
    border-radius: 4px;
    margin-bottom: 2rem;
    max-height: 250px;
    overflow-y: auto;
}

#leaderboardList {
    width: 100%;
}

.leaderboard-entry {
    display: flex;
    padding: 0.5rem 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.leaderboard-entry:last-child {
    border-bottom: none;
}

.leaderboard-rank {
    width: 30px;
    font-weight: 700;
    color: var(--accent-color);
    opacity: 0.8;
}

.leaderboard-name {
    font-weight: 700;
    flex: 1;
}

.leaderboard-depth {
    color: var(--depth-color);
    text-align: right;
}

.leaderboard-empty {
    text-align: center;
    opacity: 0.7;
    font-style: italic;
    padding: 1rem 0;
}

#playAgainButton {
    width: 100%;
}

/* Score display */
.score-display {
    position: absolute;
    top: 1.5rem;
    width: 100%;
    text-align: center;
    z-index: 100;
}

#scoreValue {
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--success-color);
} 